<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	http://cxf.apache.org/jaxws  
	http://cxf.apache.org/schemas/jaxws.xsd">

	<!-- 线程执行器配置，用于任务注册 -->
	<bean id="executor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="10" />
		<property name="maxPoolSize" value="100" />
		<property name="queueCapacity" value="500" />
	</bean>
	
	<!-- 设置调度 -->
	<!-- <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
	
		<property name="dataSource" ref="jdbcDataSource" />
		<property name="applicationContextSchedulerContextKey"
			value="applicationContextKey" />
		<property name="configLocation"
			value="classpath:quartz.properties" />
		这个是必须的，QuartzScheduler 延时启动，应用启动完后 QuartzScheduler 再启动
		<property name="startupDelay" value="10" />
		这个是可选，QuartzScheduler 启动时更新己存在的Job，这样就不用每次修改targetObject后删除qrtz_job_details表对应记录了
		<property name="overwriteExistingJobs" value="true" />
		
		<property name="triggers">
			<list>
				<ref bean="orderCancelJobCronTrigger" />
				<ref bean="orderConfirmTimeOutJobCronTrigger" />
			</list>
		</property>
		<property name="taskExecutor" ref="executor" />
	</bean> -->
	
	<!-- 取消未付款的过期订单 、
	<bean id="orderCancelTask" class="com.jlit.tsms.jobtask.OrderCancelTask" >
		<property name="systemService" ref="systemService" />
	</bean>
	
	调度业务
	<bean id="orderCancelJobDetail" class="org.springframework.scheduling.quartz.JobDetailBean">  
        <property name="jobClass" value="com.hlit.vdcs.jobtask.QuartzJobDetailBean" />  
        <property name="jobDataAsMap">  
            <map>  
                <entry key="targetObject" value="orderCancelTask" />  
                <entry key="targetMethod" value="scanExpiredBill" />  
            </map>  
        </property>  
    </bean>
    
	调度触发器
	<bean id="orderCancelJobCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="orderCancelJobDetail" />
		<property name="cronExpression" value="1 * * * * ?" />
	</bean> -->
   
   
</beans>
