<?xml version="1.0" encoding="UTF-8"?>
<!-- 引入servlet分文件 -->
<!DOCTYPE web-app [
				   <!ENTITY apiServlets SYSTEM "file:///E:\develops\gfxiangWorkSpace\elicpse_markSpace\xms\src\main\webapp\WEB-INF\api-servlets.xml">
]>

<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<display-name>xms</display-name>
	<!-- 引入api-servlets分文件 变量 -->
	<!-- &apiServlets; -->
	<!-- <context-param> -->
	<!-- <param-name>webAppRootKey</param-name> -->
	<!-- <param-value>webapp.root</param-value> -->
	<!-- </context-param> -->

	<!-- Define the basename for a resource bundle for I18N -->
	<context-param>
		<param-name>javax.servlet.jsp.jstl.fmt.localizationContext</param-name>
		<param-value>com.jlit.uums.resources.i18nResources</param-value>
	</context-param>

	<!-- Fallback locale if no bundles found for browser's preferred locale -->
	<!-- Force a single locale using param-name 'javax.servlet.jsp.jstl.fmt.locale' -->
	<context-param>
		<param-name>javax.servlet.jsp.jstl.fmt.fallbackLocale</param-name>
		<param-value>zh_CN</param-value>
	</context-param>

	<!-- Context Configuration locations for Spring XML files -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
  	 	classpath:/com/jlit/xms/resources/applicationContext*.xml
  	 </param-value>
	</context-param>

	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>xms.root</param-value>
	</context-param>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:/com/jlit/xms/resources/log4j.xml</param-value>
	</context-param>
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>60000</param-value>
	</context-param>


	<!-- ********************************Filter Begin******************************** -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>ResponseOverrideFilter</filter-name>
		<filter-class>org.displaytag.filter.ResponseOverrideFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>ResponseOverrideFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>ResponseOverrideFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>exportFilter</filter-name>
		<filter-class>org.displaytag.filter.ResponseOverrideFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>exportFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>exportFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>


	<!-- ********************************Filter End******************************** -->
	<jsp-config>

		<!-- oscache 设置开始 -->
		<taglib>
			<taglib-uri>/WEB-INF/permilink</taglib-uri>
			<taglib-location>/WEB-INF/tlds/permilink.tld</taglib-location>
		</taglib>

		<taglib>
			<taglib-uri>/WEB-INF/permibutton</taglib-uri>
			<taglib-location>/WEB-INF/tlds/permibutton.tld</taglib-location>
		</taglib>
		<taglib>
			<taglib-uri>oscache</taglib-uri>
			<taglib-location>/WEB-INF/tlds/oscache.tld</taglib-location>
		</taglib>
	</jsp-config>
	<filter>
		<filter-name>CacheFilter</filter-name>
		<filter-class>com.opensymphony.oscache.web.filter.CacheFilter</filter-class>
		<init-param>
			<param-name>time</param-name>
			<param-value>60</param-value>
		</init-param>
		<init-param>
			<param-name>scope</param-name>
			<param-value>session</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CacheFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>

	<!-- oscache 设置终止 -->
	
	<!-- 配置servlet 开始 -->
	
	<!-- 跳转至oauth服务器认证请求  -->
	<servlet>
		<servlet-name>authorizationForOauthServletProxyBean</servlet-name>
		<servlet-class>
			com.jlit.xms.servlet.ServletToBeanProxy
		</servlet-class>
		<init-param>
			<param-name>targetBean</param-name>
			<param-value>authorizationForOauthServletBean</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>authorizationForOauthServletProxyBean</servlet-name>
		<url-pattern>/authorize</url-pattern>
	</servlet-mapping>
	<!--跳转至oauth服务器认证请求  end -->
	<!--oauth认证授权完成后回调处理  -->
	<servlet>
		<servlet-name>authorizationCallbackServletProxyBean</servlet-name>
		<servlet-class>
			com.jlit.xms.servlet.ServletToBeanProxy
		</servlet-class>
		<init-param>
			<param-name>targetBean</param-name>
			<param-value>authorizationCallbackServletBean</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>authorizationCallbackServletProxyBean</servlet-name>
		<url-pattern>/oauthCallback</url-pattern>
	</servlet-mapping>
	<!--oauth认证授权完成后回调处理  end -->
	
	<servlet>
		<servlet-name>mvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:/com/jlit/xms/resources/spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>mvc</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	<!-- CXF Servlet 的定义，以及它的映射 -->  
    <servlet>  
        <servlet-name>CXFServlet</servlet-name>  
        <servlet-class>  
            org.apache.cxf.transport.servlet.CXFServlet  
        </servlet-class>  
        <load-on-startup>1</load-on-startup>  
    </servlet>  
    <!-- CXFServlet Mapping -->  
    <servlet-mapping>  
        <servlet-name>CXFServlet</servlet-name>  
        <url-pattern>/ws/*</url-pattern>  
    </servlet-mapping>  
	
	<!-- ********************************Listener Begin******************************* -->
	<listener>
		<listener-class>
			org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<listener>
		<listener-class>com.jlit.xms.listener.GlobalListener</listener-class>
	</listener>
	<welcome-file-list>
		<welcome-file>authorize</welcome-file>
	</welcome-file-list>

</web-app>
